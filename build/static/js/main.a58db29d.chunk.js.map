{"version":3,"sources":["LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","Login","error","useState","email","password","details","setDetails","onSubmit","e","preventDefault","className","htmlFor","type","name","id","onChange","target","value","Context","React","createContext","App","adminUser","user","setUser","message","useMessage","messsageApi","contextHolder","Provider","onClick","open","content","Consumer","duration","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAoCeA,MA/Bf,YAAsC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACxB,EAA8BC,mBAAS,CAACC,MAAO,GAAIC,SAAU,KAA7D,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OACI,sBAAMC,SATY,SAAAC,GAClBA,EAAEC,iBAEFT,EAAMK,IAMN,SACI,sBAAKK,UAAU,QAAf,UACI,iCAAQ,8CACG,IAATT,EAAiB,qBAAKS,UAAU,QAAf,SAAwBT,IAAgB,GAC3D,sBAAKS,UAAU,QAAf,UACI,uBAAOC,QAAQ,QAAf,mBADJ,IACyC,uBACrC,uBAAOC,KAAK,OAAOC,KAAK,QAAQC,GAAG,QAAQC,SAAU,SAAAP,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAcF,MAAOK,EAAEQ,OAAOC,UAASA,MAAOZ,EAAQF,WACxH,uBACN,sBAAKO,UAAU,QAAf,UACI,uBAAOC,QAAQ,WAAf,sBAA0C,uBAC1C,uBAAOC,KAAK,WAAWC,KAAK,WAAWC,GAAG,WAAUC,SAAU,SAAAP,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAcD,SAAUI,EAAEQ,OAAOC,UAASA,MAAOZ,EAAQD,cACpI,uBAAK,uBACX,uBAAOQ,KAAK,SAASK,MAAM,UAC3B,6BC1BVC,EAAUC,IAAMC,cAAc,CAAEP,KAAM,YAsD7BQ,MApDf,WACE,IAAMC,EACG,eADHA,EAEM,WAEZ,EAAwBpB,mBAAS,CAACC,MAAO,KAAzC,mBAAOoB,EAAP,KAAaC,EAAb,KACA,EAA0BtB,mBAAS,IAAnC,mBAAOD,EAAP,KACA,GADA,KACqCwB,IAAQC,cAA7C,mBAAOC,EAAP,KAAoBC,EAApB,KAwBA,OACE,qBAAKlB,UAAU,MAAf,SACkB,IAAda,EAAKpB,MACL,sBAAKO,UAAU,UAAf,UACE,yCAAW,+BAAOa,EAAKpB,WACvB,eAACe,EAAQW,SAAT,CAAkBZ,MAAO,CAAEJ,KAAM,aAAjC,UACCe,EACC,cAAC,IAAD,CAAQhB,KAAK,UAAUkB,QAfpB,WACXH,EAAYI,KAAK,CACfnB,KAAM,OACNoB,QAAS,cAACd,EAAQe,SAAT,UAAmB,gBAAGpB,EAAH,EAAGA,KAAH,iBAAkBA,EAAlB,QAC5BqB,SAAU,KAWJ,0BAMN,cAAC,EAAD,CAAWlC,MAnCD,SAAAK,GACZ8B,QAAQC,IAAI/B,GAERA,EAAQF,OAASmB,GAAmBjB,EAAQD,UAAYkB,GAC1Da,QAAQC,IAAI,YACZZ,EAAQ,CACNrB,MAAOE,EAAQF,SAGjBgC,QAAQC,IAAI,iCA0BanC,MAAOA,OCtCvBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a58db29d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {message} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nfunction LoginPage({ Login, error }) {\r\n    const [details, setDetails] = useState({email: \"\", password: \"\"});\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        Login(details);\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <dev className=\"inner\">\r\n                <center><h1>LOGIN PAGE</h1></center>\r\n                {(error != \"\") ? ( <div className=\"error\">{error}</div>) : \"\"}\r\n                <dev className=\"group\">\r\n                    <label htmlFor=\"email\">Email</label> <br/>\r\n                    <input type=\"text\" name=\"email\" id=\"email\" onChange={e => setDetails({...details, email: e.target.value})} value={details.email}/>\r\n                </dev><br/> \r\n                <dev className=\"group\">\r\n                    <label htmlFor=\"password\">Password</label><br/>\r\n                    <input type=\"password\" name=\"password\" id=\"password\"onChange={e => setDetails({...details, password: e.target.value})} value={details.password}/>\r\n                </dev><br/><br/>\r\n                <input type=\"submit\" value=\"LOGIN\"/>\r\n                <br/>\r\n            </dev>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginPage;\r\n","import { message, Button } from 'antd';\nimport React, { useState } from 'react';\nimport LoginPage from './LoginPage';\n\nconst Context = React.createContext({ name: 'Default' });\n\nfunction App() {\n  const adminUser ={\n    email: \"admin@ad.com\",\n    password: \"admin123\"\n  }\n  const [user, setUser] = useState({email: \"\"});\n  const [error, setError] = useState(\"\");\n  const [messsageApi, contextHolder] = message.useMessage();\n  \n  const Login = details => {\n    console.log(details);\n\n    if (details.email == adminUser.email && details.password == adminUser.password){\n      console.log(\"LOGED IN\");\n      setUser({\n        email: details.email,\n      });\n    }else{\n      console.log(\" INCORRECT EMAIL OR PASSWORD\");\n    }\n  }\n\n  \n  const info = () => {\n    messsageApi.open({\n      type: 'info',\n      content: <Context.Consumer>{({ name }) => ` ${name}!`}</Context.Consumer>,\n      duration: 1,\n    });\n  }\n \n  return (\n    <div className=\"App\">\n      {(user.email != \"\") ? (\n        <dev className=\"welcome\">\n          <h2>Login, <span>{user.email}</span></h2>\n          <Context.Provider value={{ name: 'LOGED OUT' }}>\n          {contextHolder}\n            <Button type=\"primary\" onClick={info}>\n              LOGOUT\n            </Button>\n          </Context.Provider>\n        </dev>\n      ) : (\n      <LoginPage Login={Login} error={error}/>\n      )}\n      \n    </div>\n    \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}